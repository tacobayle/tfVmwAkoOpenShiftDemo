#cloud-config
users:
  - default

ssh_pwauth: True

chpasswd:
  list: |
    ubuntu:${password}
  expire: False

hostname: ${hostname}

write_files:
  - content: |
      #!/bin/bash
      run_cmd() {
        retry=10
        pause=60
        attempt=0
        echo "############################################################################################"
        while [ $attempt -ne $retry ]; do
          if eval "$@"; then
            echo "$1 PASSED"
            break
          else
            echo "$1 FAILED"
          fi
          ((attempt++))
          sleep $pause
          if [ $attempt -eq $retry ]; then
            echo "$1 FAILED after $retry retries" | tee /tmp/cloudInitFailed.log
            exit 255
          fi
        done
      }
      run_cmd '! sudo apt update | grep Err'
      run_cmd 'sudo apt install -y python3-pip; ls /usr/bin/pip3'
      run_cmd 'sudo apt install -y bind9; ls /etc/bind'
      #
      # Bind config
      #
      sudo cp /etc/bind/named.conf /etc/bind/named.conf.old
      sudo tee /etc/bind/named.conf > /dev/null <<EOT
      include "/etc/bind/named.conf.options";
      include "/etc/bind/named.conf.local";
      include "/etc/bind/named.conf.default-zones";
      key ${keyName}. {
       algorithm hmac-md5;
       secret ${secret};
       };
      EOT
      #
      until [ ! -z "$dns" ] ; do dns=$(systemd-resolve --status | grep "Current DNS Server" | awk -F': ' '{print $2}' | tr -d '[:space:]') ; sleep 2 ; done
      sudo cp /etc/bind/named.conf.options /etc/bind/named.conf.options.old
      sudo tee /etc/bind/named.conf.options > /dev/null <<EOT
      options {
        directory "/var/cache/bind";
        recursion yes;
        notify yes;
        allow-query { any; };
        allow-query-cache { any; };
        allow-recursion { any; };
        forwarders { dns_to_be_replaced; };
        dnssec-validation no;
        auth-nxdomain no; # conform to RFC1035
        listen-on { localhost; any; };
        listen-on-v6 { localhost; any; };
        allow-transfer { any; };
      };
      EOT
      sed -i -e "s/dns_to_be_replaced/$dns/g" /etc/bind/named.conf.options
      #
      sudo cp /etc/bind/named.conf.local /etc/bind/named.conf.local.old
      sudo tee /etc/bind/named.conf.local > /dev/null <<EOT
      zone "${domain}" {
        type master;
        allow-transfer { any; };
        update-policy {
          grant ${keyName} zonesub any;
        };
        file "/var/lib/bind/db.${domain}";
      };
      zone "reverse_to_be_replaced" {
        type master;
        update-policy {
          grant myKeyName zonesub any;
        };
        allow-transfer { any; };
        file "/var/lib/bind/db.reverse";
      };
      EOT
      until [ ! -z "$if_primary_name" ] ; do if_primary_name=$(ip route | grep default | sed -e "s/^.*dev.//" -e "s/.proto.*//")  ; sleep 2 ; done
      until [ ! -z "$ip" ] ; do ip=$(ip address show dev $if_primary_name | grep -v inet6 | grep inet | awk '{print $2}' | awk -F'/' '{print $1}')  ; sleep 2 ; done

      octets=""
      addr="in-addr.arpa
      ip=${openshift_cidr}
      IFS="." read -r -a octets <<< "$ip"
      count=0
      for octet in "$${octets[@]}"; do if [ $count -eq 3 ]; then break ; fi ; addr=$octet"."$addr ;((count++)) ; done
      sed -i -e "s/reverse_to_be_replaced/$addr/g" /etc/bind/named.conf.local
      #
      sudo tee /var/lib/bind/db.${domain} > /dev/null <<EOT
      \$ORIGIN .
      \$TTL 60
      ${domain}                IN SOA dns.${domain}. admin.${domain}. (
                                      329        ; serial
                                      604800     ; refresh (1 week)
                                      86400      ; retry (1 day)
                                      2419200    ; expire (4 weeks)
                                      604800     ; minimum (1 week)
                                      )
                              NS      dns.${domain}.
      \$ORIGIN ${domain}.
      dns                     A       ip_to_be_replaced
      api.${ocpname}          A       ${openshift_api_ip}
      *.${ocpname}            A       ${openshift_ingress_ip}
      \$TTL 3600       ; 1 hour
      EOT
      sed -i -e "s/ip_to_be_replaced/$ip/g" /var/lib/bind/db.${domain}
      #
      sudo tee /var/lib/bind/db.reverse > /dev/null <<EOT
      \$ORIGIN .
      \$TTL 60
      reverse_to_be_replaced     IN SOA  dns.${domain}. admin.${domain}. (
                                      298        ; serial
                                      604800     ; refresh (1 week)
                                      86400      ; retry (1 day)
                                      2419200    ; expire (4 weeks)
                                      604800     ; minimum (1 week)
                                      )
                              NS      dns.${domain}.
      \$ORIGIN reverse_to_be_replaced
      last_octet_to_be_replaced            PTR     dns.${domain}.
      EOT
      sed -i -e "s/reverse_to_be_replaced/$addr/g" /var/lib/bind/db.reverse
      count=0
      for octet in "$${octets[@]}"; do if [ $count -eq 3 ]; then last_octet=$octet ; fi ; ((count++)) ; done
      sed -i -e "s/last_octet_to_be_replaced/$last_octet/g" /var/lib/bind/db.reverse
      sudo service bind9 restart
      echo "cloud init done" | tee /tmp/cloudInitDone.log
    path: /opt/bootstrap.sh
    permissions: "0755"

runcmd:
  - /opt/bootstrap.sh